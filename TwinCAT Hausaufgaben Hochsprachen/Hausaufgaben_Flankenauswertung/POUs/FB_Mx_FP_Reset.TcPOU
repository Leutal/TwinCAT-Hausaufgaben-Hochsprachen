<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="FB_Mx_FP_Reset" Id="{9c891d4c-1c8e-487b-a4f2-8c0a646bd387}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_Mx_FP_Reset			// FB zum erkennen einer steigender Flanke
VAR_INPUT
	Ix_Reset: BOOL;						// Abzufragendes Signal
END_VAR
VAR_OUTPUT
END_VAR
VAR
	Mx_lmp_Reset: BOOL;					// Ausgang für 1 Zyklus aktiv wenn negativepositive Flanke erkannt
	last_CLK: BOOL;						// Zwischenspeicher des letzten Zustandes des Eingangssignal
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[Mx_lmp_Reset:= Ix_Reset AND NOT last_CLK;		// Ausgang schaltet für 1 Zyklus auf TRUE wenn Bedingung erfüllt, ansonsten bleibt er FALSE	
last_CLK:= Ix_Reset;							// Zwischenspeicher des letzten Zustandes des abzufragenden Signals (Ix_Reset)

//Auch Möglich umzusetzten mit IF, ELSE:

IF NOT last_CLK AND Ix_Reset THEN				// Wenn Bedingung einer steigender Flanke erfüllt
	Mx_lmp_Reset := TRUE;						// Ausgang schaltet für 1 Zyklus auf TRUE
ELSE 
	Mx_lmp_Reset := FALSE;						// Wenn Bedingung einer steigender Flanke nicht erfüllt bleibt Ausgang FALSE
END_IF
last_CLK := Ix_Reset;							// Zwischenspeicher des letzten Zustandes des abzufragenden Signals (Ix_Reset)]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>